@inherits Umbraco.Web.Mvc.UmbracoTemplatePage

@*
    This snippet makes a list of links to the of parents of the current page using an unordered html list.

    How it works:
    - It uses the Ancestors() method to get all parents and then generates links so the visitor can go back
    - Finally it outputs the name of the current page (without a link)
*@

  

@{ var projectDropdown = CurrentPage.Site().Children.Where("DocumentTypeAlias == \"ProjectMain\"").First().Children.Where("Visible").OrderBy("Name"); }
 
 
 
 
            if (menuItem.Name != "ProjectMain")
            {
                <li class="@(menuItem.IsAncestorOrSelf(CurrentPage) ? "active" : null)">
                    <a href="@menuItem.Url">@menuItem.Name</a>
                </li>
            }
            else
            {
                <li class="dropdown @(menuItem.IsAncestorOrSelf(CurrentPage) ? "active" : null)">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-expanded="false">Our Projects<span class="caret"></span></a>
                    <ul class="dropdown-menu" role="menu">
                        @foreach (var subMenuItem in projectDropdown)
                        {
                            if ((umbraco.library.GetPreValueAsString(subMenuItem.projectStatus)) == "Completed")
                            {
                                @* Display only submenu items users have access to *@
                                if (!umbraco.library.IsProtected(subMenuItem.id, subMenuItem.path) ||
                                    umbraco.library.IsProtected(subMenuItem.id, subMenuItem.path) && umbraco.library.HasAccess(subMenuItem.id, subMenuItem.path)) {
                                        <li>
                                            <a href="@subMenuItem.Url">@subMenuItem.Name</a>
                                        </li>
                                }
                            }
                        }
                    </ul>
                </li>
            }